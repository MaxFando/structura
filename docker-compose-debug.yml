version: '3.7'

services:
  app:
    build:
      context: .
      dockerfile: debug.dockerfile
    ports:
      - "8080:8080"
      - "40000:40000"
      - "50051:50051"
    environment:
      - ENV_VAR=value
    security_opt:
      - "seccomp:unconfined"
    cap_add:
      - SYS_PTRACE
    command: "--listen=:40000 --continue --headless=true --api-version=2 --accept-multiclient exec ./app"
    volumes:
      - cache:/root/.cache
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "${JAEGER_AGENT_PORT:-16686}:16686"
      - "${JAEGER_GRPC_PORT:-4317}:4317"
      - "${JAEGER_HTTP_PORT:-4318}:4318"

  database:
    image: postgres:16-alpine
    volumes:
      - database_data:/var/lib/postgresql/data:delegated
      - ./pg/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d/:delegated
    environment:
      POSTGRES_DB: structura
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  database_data:
  cache:
