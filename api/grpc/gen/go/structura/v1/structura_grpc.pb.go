// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: structura/v1/structura.proto

package structurav1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	StructuraService_GetDomainInfo_FullMethodName = "/structura.v1.StructuraService/GetDomainInfo"
	StructuraService_GetPageBlocks_FullMethodName = "/structura.v1.StructuraService/GetPageBlocks"
)

// StructuraServiceClient is the client API for StructuraService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type StructuraServiceClient interface {
	GetDomainInfo(ctx context.Context, in *GetDomainInfoRequest, opts ...grpc.CallOption) (*GetDomainInfoResponse, error)
	GetPageBlocks(ctx context.Context, in *GetPageBlocksRequest, opts ...grpc.CallOption) (*GetPageBlocksResponse, error)
}

type structuraServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStructuraServiceClient(cc grpc.ClientConnInterface) StructuraServiceClient {
	return &structuraServiceClient{cc}
}

func (c *structuraServiceClient) GetDomainInfo(ctx context.Context, in *GetDomainInfoRequest, opts ...grpc.CallOption) (*GetDomainInfoResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetDomainInfoResponse)
	err := c.cc.Invoke(ctx, StructuraService_GetDomainInfo_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *structuraServiceClient) GetPageBlocks(ctx context.Context, in *GetPageBlocksRequest, opts ...grpc.CallOption) (*GetPageBlocksResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetPageBlocksResponse)
	err := c.cc.Invoke(ctx, StructuraService_GetPageBlocks_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StructuraServiceServer is the server API for StructuraService service.
// All implementations must embed UnimplementedStructuraServiceServer
// for forward compatibility.
type StructuraServiceServer interface {
	GetDomainInfo(context.Context, *GetDomainInfoRequest) (*GetDomainInfoResponse, error)
	GetPageBlocks(context.Context, *GetPageBlocksRequest) (*GetPageBlocksResponse, error)
	mustEmbedUnimplementedStructuraServiceServer()
}

// UnimplementedStructuraServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedStructuraServiceServer struct{}

func (UnimplementedStructuraServiceServer) GetDomainInfo(context.Context, *GetDomainInfoRequest) (*GetDomainInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDomainInfo not implemented")
}
func (UnimplementedStructuraServiceServer) GetPageBlocks(context.Context, *GetPageBlocksRequest) (*GetPageBlocksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPageBlocks not implemented")
}
func (UnimplementedStructuraServiceServer) mustEmbedUnimplementedStructuraServiceServer() {}
func (UnimplementedStructuraServiceServer) testEmbeddedByValue()                          {}

// UnsafeStructuraServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to StructuraServiceServer will
// result in compilation errors.
type UnsafeStructuraServiceServer interface {
	mustEmbedUnimplementedStructuraServiceServer()
}

func RegisterStructuraServiceServer(s grpc.ServiceRegistrar, srv StructuraServiceServer) {
	// If the following call pancis, it indicates UnimplementedStructuraServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&StructuraService_ServiceDesc, srv)
}

func _StructuraService_GetDomainInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDomainInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StructuraServiceServer).GetDomainInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StructuraService_GetDomainInfo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StructuraServiceServer).GetDomainInfo(ctx, req.(*GetDomainInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StructuraService_GetPageBlocks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPageBlocksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StructuraServiceServer).GetPageBlocks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StructuraService_GetPageBlocks_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StructuraServiceServer).GetPageBlocks(ctx, req.(*GetPageBlocksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// StructuraService_ServiceDesc is the grpc.ServiceDesc for StructuraService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var StructuraService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "structura.v1.StructuraService",
	HandlerType: (*StructuraServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDomainInfo",
			Handler:    _StructuraService_GetDomainInfo_Handler,
		},
		{
			MethodName: "GetPageBlocks",
			Handler:    _StructuraService_GetPageBlocks_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "structura/v1/structura.proto",
}
